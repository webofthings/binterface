{"version":3,"sources":["../../../client/components/modal/modal.service.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,MAAR,CAAe,eAAf,EACG,OADH,CACW,OADX,EACoB,UAAS,UAAT,EAAqB,SAArB,EAAgC;;;;;;;AAOhD,WAAS,SAAT,GAA6D;QAA1C,8DAAQ,kBAAkC;QAA9B,mEAAa,+BAAiB;;AAC3D,QAAI,aAAa,WAAW,IAAX,EAAb,CADuD;;AAG3D,YAAQ,MAAR,CAAe,UAAf,EAA2B,KAA3B,EAH2D;;AAK3D,WAAO,UAAU,IAAV,CAAe;AACpB,mBAAa,6BAAb;AACA,mBAAa,UAAb;AACA,aAAO,UAAP;KAHK,CAAP,CAL2D;GAA7D;;;AAPgD,SAoBzC;;;AAGL,aAAS;;;;;;;;AAOP,iCAA2B;YAApB,4DAAM,QAAQ,IAAR,gBAAc;;;;;;;AAMzB,eAAO,YAAW;AAChB,cAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAP;cACA,OAAO,KAAK,KAAL,EAAP;cACA,WAFJ,CADgB;;AAKhB,wBAAc,UAAU;AACtB,mBAAO;AACL,2BAAa,IAAb;AACA,qBAAO,gBAAP;AACA,oBAAM,gDAAgD,IAAhD,GAAuD,iBAAvD;AACN,uBAAS,CAAC;AACR,yBAAS,YAAT;AACA,sBAAM,QAAN;AACA,uBAAO,eAAS,CAAT,EAAY;AACjB,8BAAY,KAAZ,CAAkB,CAAlB,EADiB;iBAAZ;eAHA,EAMN;AACD,yBAAS,aAAT;AACA,sBAAM,QAAN;AACA,uBAAO,eAAS,CAAT,EAAY;AACjB,8BAAY,OAAZ,CAAoB,CAApB,EADiB;iBAAZ;eATA,CAAT;aAJF;WADY,EAmBX,cAnBW,CAAd,CALgB;;AA0BhB,sBAAY,MAAZ,CAAmB,IAAnB,CAAwB,UAAS,KAAT,EAAgB;AACtC,gBAAI,KAAJ,CAAU,KAAV,EAAiB,IAAjB,EADsC;WAAhB,CAAxB,CA1BgB;SAAX,CANkB;OAPpB;KAAT;GAHF,CApBgD;CAAhC,CADpB","file":"modal.service.js","sourcesContent":["'use strict';\n\nangular.module('binterfaceApp')\n  .factory('Modal', function($rootScope, $uibModal) {\n    /**\n     * Opens a modal\n     * @param  {Object} scope      - an object to be merged with modal's scope\n     * @param  {String} modalClass - (optional) class(es) to be applied to the modal\n     * @return {Object}            - the instance $uibModal.open() returns\n     */\n    function openModal(scope = {}, modalClass = 'modal-default') {\n      var modalScope = $rootScope.$new();\n\n      angular.extend(modalScope, scope);\n\n      return $uibModal.open({\n        templateUrl: 'components/modal/modal.html',\n        windowClass: modalClass,\n        scope: modalScope\n      });\n    }\n\n    // Public API here\n    return {\n\n      /* Confirmation modals */\n      confirm: {\n\n        /**\n         * Create a function to open a delete confirmation modal (ex. ng-click='myModalFn(name, arg1, arg2...)')\n         * @param  {Function} del - callback, ran when delete is confirmed\n         * @return {Function}     - the function to open the modal (ex. myModalFn)\n         */\n        delete(del = angular.noop) {\n          /**\n           * Open a delete confirmation modal\n           * @param  {String} name   - name or info to show on modal\n           * @param  {All}           - any additional args are passed straight to del callback\n           */\n          return function() {\n            var args = Array.prototype.slice.call(arguments),\n                name = args.shift(),\n                deleteModal;\n\n            deleteModal = openModal({\n              modal: {\n                dismissable: true,\n                title: 'Confirm Delete',\n                html: '<p>Are you sure you want to delete <strong>' + name + '</strong> ?</p>',\n                buttons: [{\n                  classes: 'btn-danger',\n                  text: 'Delete',\n                  click: function(e) {\n                    deleteModal.close(e);\n                  }\n                }, {\n                  classes: 'btn-default',\n                  text: 'Cancel',\n                  click: function(e) {\n                    deleteModal.dismiss(e);\n                  }\n                }]\n              }\n            }, 'modal-danger');\n\n            deleteModal.result.then(function(event) {\n              del.apply(event, args);\n            });\n          };\n        }\n      }\n    };\n  });\n"]}